// Generated by JavaScript-to-Dart transpiler
// Manual implementation may be required for placeholder functions


import 'polyfill.dart';

class ContentJSON {
  constructor(dynamic arr)   constructor (arr) {
    /**
     * @type {Array<any>}
     */
    this.arr = arr
  }


  dynamic getLength()   getLength () {
    return this.arr.length
  }


  dynamic getContent()   getContent () {
    return this.arr
  }


  bool isCountable()   isCountable () {
    return true
  }


  dynamic copy()   copy () {
    return new ContentJSON(this.arr)
  }


  dynamic splice(int offset)   splice (offset) {
    const right = new ContentJSON(this.arr.slice(offset))
    this.arr = this.arr.slice(0, offset)
    return right
  }


  bool mergeWith(dynamic right)   mergeWith (right) {
    this.arr = this.arr.concat(right.arr)
    return true
  }


  void integrate(dynamic transaction, dynamic item)   integrate (transaction, item) {}


  void delete(dynamic transaction)   delete (transaction) {}


  void gc(dynamic _tr)   gc (_tr) {}


  void write(dynamic encoder, int offset, int offsetEnd) // PLACEHOLDER: Add import 'dart:convert';
  write (encoder, offset, offsetEnd) {
    const end = this.arr.length - offsetEnd
    encoder.writeLen(end - offset)
    for (let i = offset; i < end; i++) {
      const c = this.arr[i]
      encoder.writeString(c == undefined ? 'undefined' : jsonEncode(c))
    }
  }


  dynamic getRef()   getRef () {
    return 2
  }


}


const dynamic right = ContentJSON(this.arr.slice(offset));

const dynamic end = this.arr.length - offsetEnd;

const dynamic c = this.arr[i];

const dynamic len = decoder.readLen();

const List<dynamic> cs = <dynamic>[];

const dynamic c = decoder.readString();

