// Generated by JavaScript-to-Dart transpiler
// Manual implementation may be required for placeholder functions





import 'polyfill.dart';

class RelativePosition {
  constructor(dynamic type, String tname, dynamic item, dynamic assoc = 0)   constructor (type, tname, item, assoc = 0) {
    /**
     * @type {ID|null}
     */
    this.type = type
    /**
     * @type {string|null}
     */
    this.tname = tname
    /**
     * @type {ID | null}
     */
    this.item = item
    /**
     * A relative position is associated to a specific character. By default
     * assoc >= 0, the relative position is associated to the character
     * after the meant position.
     * I.e. position 1 in 'ab' is associated to character 'b'.
     *
     * If assoc < 0, then the relative position is associated to the character
     * before the meant position.
     *
     * @type {number}
     */
    this.assoc = assoc
  }


}


const Map<String, dynamic> json = <String, dynamic>{};

class AbsolutePosition {
  constructor(dynamic type, int index, dynamic assoc = 0)   constructor (type, index, assoc = 0) {
    /**
     * @type {AbstractType<any>}
     */
    this.type = type
    /**
     * @type {number}
     */
    this.index = index
    this.assoc = assoc
  }


}


dynamic typeid = null;

dynamic tname = null;

dynamic t = type._start;

const dynamic len = attributionManager.contentLength(t);

const dynamic  = null;

const dynamic encoder = encoding.createEncoder();

dynamic type = null;

dynamic tname = null;

dynamic itemID = null;

const dynamic assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;

const dynamic getItemWithOffset = (store, id) => {;

const dynamic item = getItem(store, id);

const dynamic diff = id.clock - item.id.clock;

const dynamic store = doc.store;

const dynamic rightID = rpos.item;

const dynamic typeID = rpos.type;

const dynamic tname = rpos.tname;

const dynamic assoc = rpos.assoc;

dynamic type = null;

int index = 0;

const dynamic res = followUndoneDeletions ? followRedone(store, rightID) : getItemWithOffset(store, rightID);

const dynamic right = res.item;

dynamic n = right.left;

const dynamic  = null;

