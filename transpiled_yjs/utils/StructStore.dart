// Generated by JavaScript-to-Dart transpiler
// Manual implementation may be required for placeholder functions




import 'polyfill.dart';

class StructStore {
  constructor()   constructor () {
    /**
     * @type {Map<number,Array<GC|Item>>}
     */
    this.clients = <String, dynamic>{}
    // this.ds = new IdSet()
    /**
     * @type {null | { missing: Map<number, number>, update: Uint8Array }}
     */
    this.pendingStructs = null
    /**
     * @type {null | Uint8Array}
     */
    this.pendingDs = null
    this.skips = createIdSet()
  }


  dynamic ds()   get ds () {
    return createDeleteSetFromStructStore(this)
  }


}


const Map<String, dynamic> sm = <String, dynamic>{};

const dynamic struct = structs[structs.length - 1];

const dynamic structs = store.clients.get(client);

const dynamic lastStruct = structs[structs.length - 1];

const dynamic l = structs[i - 1];

const dynamic r = structs[i];

dynamic structs = store.clients.get(struct.id.client);

const dynamic lastStruct = structs[structs.length - 1];

dynamic index = findIndexSS(structs, struct.id.clock);

const dynamic skip = structs[index];

const dynamic diffStart = struct.id.clock - skip.id.clock;

const dynamic diffEnd = skip.id.clock + skip.length - struct.id.clock - struct.length;

int left = 0;

dynamic right = structs.length - 1;

dynamic mid = structs[right];

dynamic midclock = mid.id.clock;

dynamic midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search;

const dynamic structs = store.clients.get(id.client);

const dynamic index = findIndexSS(structs, clock);

const dynamic struct = structs[index];

const dynamic structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));

const dynamic structs = store.clients.get(id.client);

const dynamic index = findIndexSS(structs, id.clock);

const dynamic struct = structs[index];

const dynamic structs = /** @type {Array<GC|Item>} */ (tr.doc.store.clients.get(struct.id.client));

const dynamic clockEnd = clockStart + len;

dynamic index = findIndexCleanStart(transaction, structs, clockStart);

dynamic struct;

