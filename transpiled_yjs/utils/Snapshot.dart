// Generated by JavaScript-to-Dart transpiler
// Manual implementation may be required for placeholder functions






import 'polyfill.dart';

class Snapshot {
  constructor(dynamic ds, dynamic sv)   constructor (ds, sv) {
    /**
     * @type {IdSet}
     */
    this.ds = ds
    /**
     * State Map
     * @type {Map<number,number>}
     */
    this.sv = sv
  }


}


const dynamic sv1 = snap1.sv;

const dynamic sv2 = snap2.sv;

const dynamic meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);

const dynamic store = transaction.doc.store;

const dynamic  = null;

const dynamic encoder = UpdateEncoderV2();

int size = 0;

const dynamic structs = originDoc.store.clients.get(client) || [];

const dynamic lastStructIndex = findIndexSS(structs, clock - 1);

const List<dynamic> structs = <dynamic>[];

const dynamic updateDecoder = YDecoder(decoding.createDecoder(update));

const dynamic lazyDecoder = LazyStructReader(updateDecoder, false);

const dynamic mergedDS = mergeIdSets([snapshot.ds, readIdSet(updateDecoder)]);

