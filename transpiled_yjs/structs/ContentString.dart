// Generated by JavaScript-to-Dart transpiler
// Manual implementation may be required for placeholder functions


import 'polyfill.dart';

class ContentString {
  constructor(dynamic str)   constructor (str) {
    /**
     * @type {string}
     */
    this.str = str
  }


  dynamic getLength()   getLength () {
    return this.str.length
  }


  dynamic getContent()   getContent () {
    return this.str.split('')
  }


  bool isCountable()   isCountable () {
    return true
  }


  dynamic copy()   copy () {
    return new ContentString(this.str)
  }


  dynamic splice(int offset)   splice (offset) {
    const right = new ContentString(this.str.slice(offset))
    this.str = this.str.slice(0, offset)

    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248
    const firstCharCode = this.str.charCodeAt(offset - 1)
    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {
      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.
      // We don't support splitting of surrogate pairs because this may lead to invalid documents.
      // Replace the invalid character with a unicode replacement character (� / U+FFFD)
      this.str = this.str.slice(0, offset - 1) + '�'
      // replace right as well
      right.str = '�' + right.str.slice(1)
    }
    return right
  }


  bool mergeWith(dynamic right)   mergeWith (right) {
    this.str += right.str
    return true
  }


  void integrate(dynamic transaction, dynamic item)   integrate (transaction, item) {}


  void delete(dynamic transaction)   delete (transaction) {}


  void gc(dynamic _tr)   gc (_tr) {}


  void write(dynamic encoder, int offset, int offsetEnd)   write (encoder, offset, offsetEnd) {
    encoder.writeString((offset == 0 && offsetEnd == 0) ? this.str : this.str.slice(offset, this.str.length - offsetEnd))
  }


  dynamic getRef()   getRef () {
    return 4
  }


}


const dynamic right = ContentString(this.str.slice(offset));

const dynamic firstCharCode = this.str.charCodeAt(offset - 1);

