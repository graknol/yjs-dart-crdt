// Generated by JavaScript-to-Dart transpiler
// Manual implementation may be required for placeholder functions

import 'package:placeholders.dart.dart';

class GC extends AbstractStruct {
  bool deleted()   get deleted () {
    return true
  }


  void delete()   delete () {}


  bool mergeWith(dynamic right)   mergeWith (right) {
    if (this.constructor != right.constructor) {
      return false
    }
    this.length += right.length
    return true
  }


  void integrate(dynamic transaction, int offset)   integrate (transaction, offset) {
    if (offset > 0) {
      this.id.clock += offset
      this.length -= offset
    }
    addToIdSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)
    addStructToIdSet(transaction.insertSet, this)
    addStruct(transaction.doc.store, this)
  }


  void write(dynamic encoder, int offset, int offsetEnd)   write (encoder, offset, offsetEnd) {
    encoder.writeInfo(structGCRefNumber)
    encoder.writeLen(this.length - offset - offsetEnd)
  }


  void getMissing(dynamic _transaction, dynamic _store)   getMissing (_transaction, _store) {
    return null
  }


  dynamic splice(dynamic diff)   splice (diff) {
    const other = new GC(createID(this.id.client, this.id.clock + diff), this.length - diff)
    this.length = diff
    return other
  }


}


const dynamic other = GC(createID(this.id.client, this.id.clock + diff), this.length - diff);

